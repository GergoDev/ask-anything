{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/AllQuestions/AllQuestions.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport Breadcrumb from '../../Breadcrumb';\nimport columns from './table_columns';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FEED_QUERY = gql`\n  query {\n    feedQuestions {\n      id\n      title\n      message\n      submissionTime\n      view\n      voteCount\n    }\n  }\n`;\n\nconst AllQuestions = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(FEED_QUERY);\n  const [questions, setQuestions] = useState();\n  useEffect(() => {\n    const getQuestions = async () => {\n      const dataWithKeys = data.map(question => {\n        return { ...question,\n          key: question.id\n        };\n      });\n      setQuestions(dataWithKeys);\n    };\n\n    getQuestions();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      locationArray: ['Home', 'All Questions']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: questions,\n        bordered: true,\n        pagination: {\n          position: ['bottomCenter'],\n          pageSize: 7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AllQuestions, \"fjiD4iNQUV3sVxj1kUNzmYB50tU=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllQuestions;\nexport default AllQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuestions\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/AllQuestions/AllQuestions.tsx"],"names":["useState","useEffect","Table","Breadcrumb","columns","useQuery","gql","FEED_QUERY","AllQuestions","data","questions","setQuestions","getQuestions","dataWithKeys","map","question","key","id","position","pageSize"],"mappings":";;;AAAA,SAAaA,QAAb,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAME,YAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACE,UAAD,CAAzB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,YAAY,GAAG,YAAY;AAC7B,YAAMC,YAAY,GAAGJ,IAAI,CAACK,GAAL,CAAUC,QAAD,IAAiC;AAAC,eAAO,EAAC,GAAGA,QAAJ;AAAcC,UAAAA,GAAG,EAAED,QAAQ,CAACE;AAA5B,SAAP;AAAuC,OAAlF,CAArB;AACAN,MAAAA,YAAY,CAACE,YAAD,CAAZ;AACH,KAHD;;AAIAD,IAAAA,YAAY;AACf,GANQ,EAMN,CAACH,IAAD,CANM,CAAT;AAQA,sBAAQ;AAAA,4BACN,QAAC,UAAD;AAAY,MAAA,aAAa,EAAE,CAAC,MAAD,EAAS,eAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,KAAD;AACI,QAAA,OAAO,EAAEL,OADb;AAEI,QAAA,UAAU,EAAEM,SAFhB;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,UAAU,EAAG;AACTQ,UAAAA,QAAQ,EAAE,CAAC,cAAD,CADD;AAETC,UAAAA,QAAQ,EAAE;AAFD;AAJjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA,kBAAR;AAaH,CAzBD;;GAAMX,Y;UACeH,Q;;;KADfG,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport Breadcrumb from '../../Breadcrumb';\nimport columns from './table_columns';\nimport { QuestionInterface } from '../../../interfaces/QuestionInterface';\nimport { useQuery, gql } from '@apollo/client';\n\nconst FEED_QUERY = gql`\n  query {\n    feedQuestions {\n      id\n      title\n      message\n      submissionTime\n      view\n      voteCount\n    }\n  }\n`;\n\nconst AllQuestions: FC = () => {\n    const { data } = useQuery(FEED_QUERY);\n    const [questions, setQuestions] = useState();\n\n    useEffect(() => {\n        const getQuestions = async () => {\n            const dataWithKeys = data.map((question: QuestionInterface) => {return {...question, key: question.id}});\n            setQuestions(dataWithKeys);\n        }\n        getQuestions();\n    }, [data])\n\n    return (<>\n      <Breadcrumb locationArray={['Home', 'All Questions']} />\n      <div className=\"site-layout-content\">\n        <Table \n            columns={columns}\n            dataSource={questions}\n            bordered\n            pagination= {{ \n                position: ['bottomCenter'],\n                pageSize: 7\n            }} />\n      </div>\n    </>)\n};\n\nexport default AllQuestions;"]},"metadata":{},"sourceType":"module"}