{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport Answers from '../Answers/Answers';\nimport { Card, Row, Col, Modal } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport IconBar from '../IconBar';\nimport EditQuestion from '../EditQuestion';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = Modal;\nconst FEED_QUESTION_QUERY = gql`\nquery feedQuestionQuery($id: ID!) {\n    feedQuestion(id: $id) {\n        title\n        message\n        submissionTime\n        view\n        voteCount\n    }\n}\n`;\n\nconst Question = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState();\n  const [redirect, setRedirect] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const {\n    data\n  } = useQuery(FEED_QUESTION_QUERY, {\n    variables: {\n      id: parseInt(id)\n    }\n  });\n  useEffect(() => {\n    console.log(data);\n    setQuestion(data);\n  }, [data]);\n\n  const editHandler = async values => {\n    const updatedQuestion = { ...question,\n      title: values.title,\n      message: values.message\n    };\n    await fetch(`http://localhost:5000/questions/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedQuestion)\n    });\n    setEdit(false);\n  };\n\n  const deleteHandler = async () => {\n    await fetch(`http://localhost:5000/questions/${id}`, {\n      method: 'DELETE'\n    });\n    setRedirect(\"/\");\n  };\n\n  function showDeleteConfirm() {\n    confirm({\n      title: 'Delete this question?',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this),\n      content: 'Are you sure you want to delete this question?',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n\n      onOk() {\n        deleteHandler();\n      },\n\n      onCancel() {\n        console.log('Cancel');\n      }\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      locationArray: ['Home', 'Question', question ? question.title : '']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: question && /*#__PURE__*/_jsxDEV(Card, {\n        title: question.title,\n        className: \"question-card\",\n        extra: /*#__PURE__*/_jsxDEV(IconBar, {\n          className: \"question-icon-bar\",\n          editHandler: () => setEdit(true),\n          deleteHandler: showDeleteConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 40\n        }, this),\n        children: [edit && /*#__PURE__*/_jsxDEV(EditQuestion, {\n          question: question,\n          editHandler: editHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"Submitted at\",\n              bordered: true,\n              children: question.submissionTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"Author\",\n              bordered: true,\n              children: question.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"View\",\n              bordered: true,\n              children: question.view\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"Vote\",\n              bordered: true,\n              extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"http://google.com\",\n                  children: [\"UP\", /*#__PURE__*/_jsxDEV(CaretUpOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"http://google.com\",\n                  children: [\"DOWN\", /*#__PURE__*/_jsxDEV(CaretDownOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 127\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 95\n                }, this)]\n              }, void 0, true),\n              children: question.voteCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"question-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: question.message.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g, '<br>')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Answers, {\n          question_id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"7BbiGQGKOCCOE10U7mE0mg1gcD4=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/Question.tsx"],"names":["useEffect","useState","Redirect","useParams","Breadcrumb","Answers","Card","Row","Col","Modal","CaretUpOutlined","CaretDownOutlined","ExclamationCircleOutlined","IconBar","EditQuestion","gql","useQuery","confirm","FEED_QUESTION_QUERY","Question","id","question","setQuestion","redirect","setRedirect","edit","setEdit","data","variables","parseInt","console","log","editHandler","values","updatedQuestion","title","message","fetch","method","headers","body","JSON","stringify","deleteHandler","showDeleteConfirm","icon","content","okText","okType","cancelText","onOk","onCancel","submissionTime","user_name","view","voteCount","__html","replace"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport Answers from '../Answers/Answers';\nimport { Card, Row, Col, Modal } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { QuestionInterface } from '../../interfaces/QuestionInterface';\nimport IconBar from '../IconBar';\nimport EditQuestion from '../EditQuestion';\nimport { gql, useQuery } from '@apollo/client'\n\nconst { confirm } = Modal;\n\nconst FEED_QUESTION_QUERY = gql`\nquery feedQuestionQuery($id: ID!) {\n    feedQuestion(id: $id) {\n        title\n        message\n        submissionTime\n        view\n        voteCount\n    }\n}\n`\n\nconst Question: FC = () => {\n    const {id}: {id: string} = useParams();\n    const [question, setQuestion] = useState<QuestionInterface>();\n    const [redirect, setRedirect] = useState(\"\");\n    const [edit, setEdit] = useState(false);\n\n    const { data } = useQuery(FEED_QUESTION_QUERY, {\n        variables: { id: parseInt(id) }\n    })\n    \n    useEffect(() => {\n        console.log(data)\n        setQuestion(data)\n    }, [data])\n    \n    const editHandler = async (values: any) => {\n        const updatedQuestion = {\n            ...question,\n            title: values.title,\n            message: values.message,\n        }\n        await fetch(`http://localhost:5000/questions/${id}`,\n            {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(updatedQuestion)\n            })\n        setEdit(false);\n    }\n\n    const deleteHandler = async () => {\n        await fetch(`http://localhost:5000/questions/${id}`,\n            {method: 'DELETE'});\n        setRedirect(\"/\");\n    }\n\n    function showDeleteConfirm() {\n        confirm({\n          title: 'Delete this question?',\n          icon: <ExclamationCircleOutlined />,\n          content: 'Are you sure you want to delete this question?',\n          okText: 'Yes',\n          okType: 'danger',\n          cancelText: 'No',\n          onOk() {\n            deleteHandler();\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n\n    return (\n        <>\n            {redirect && <Redirect to={redirect} />}\n            <Breadcrumb locationArray={['Home', 'Question', question ? question.title : '']} />\n            <div className=\"site-layout-content\">  \n                {question && <Card \n                                title={question.title}\n                                className=\"question-card\"\n                                extra={<IconBar \n                                            className=\"question-icon-bar\"\n                                            editHandler={() => setEdit(true)}\n                                            deleteHandler={showDeleteConfirm} />}>\n                    {edit && <EditQuestion question={question} editHandler={editHandler} />}\n                    <Row gutter={16} className=\"details\">\n                        <Col span={6}>\n                            <Card size=\"small\" title=\"Submitted at\" bordered={true}>\n                            {question.submissionTime}\n                            </Card>\n                        </Col>\n                        <Col span={6}>\n                            <Card size=\"small\" title=\"Author\" bordered={true}>\n                            {question.user_name}\n                            </Card>\n                        </Col>\n                        <Col span={6}>\n                            <Card size=\"small\" title=\"View\" bordered={true}>\n                            {question.view}\n                            </Card>\n                        </Col>\n                        <Col span={6}>\n                            <Card \n                                size=\"small\"\n                                title=\"Vote\"\n                                bordered={true}\n                                extra={<><a href=\"http://google.com\">UP<CaretUpOutlined /></a><a href=\"http://google.com\">DOWN<CaretDownOutlined /></a></>}>\n                            {question.voteCount}\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Card className=\"question-message\">\n                        <div dangerouslySetInnerHTML={{__html: question.message.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g, '<br>')}}></div>\n                    </Card>\n                    <Answers question_id={id} />\n                </Card>}\n            </div>\n        </>\n    )\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}