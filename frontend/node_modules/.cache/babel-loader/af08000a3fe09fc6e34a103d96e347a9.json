{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport Answers from '../Answers/Answers';\nimport { Card, Row, Col, Modal } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport IconBar from '../IconBar';\nimport EditQuestion from '../EditQuestion';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = Modal;\nconst FEED_QUESTION_QUERY = gql`\nquery feedQuestionQuery($id: ID!) {\n    feedQuestion(id: $id) {\n        title\n        message\n        submissionTime\n        view\n        voteCount\n        answers {\n            id\n            key\n            author\n            content\n            avatar\n            datetime\n        }\n    }\n}\n`;\nconst UPDATE_QUESTION_MUTATION = gql`\nmutation updateQuestionMutation(\n    $id: ID!\n    $title: String!\n    $message: String!) {\n    updateQuestion(id: $id, title: $title, message: $message) {\n        title\n        message\n    }\n}\n`;\nconst DELETE_QUESTION_MUTATION = gql`\nmutation deleteQuestionMutation($id: ID!){\n    deleteQuestion(id: $id) {\n      id\n    }\n  }\n`;\n\nconst Question = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState();\n  const [edit, setEdit] = useState(false);\n  const history = useHistory();\n  useQuery(FEED_QUESTION_QUERY, {\n    variables: {\n      id: parseInt(id)\n    },\n    onCompleted: res => setQuestion(res.feedQuestion)\n  });\n  const [updateQuestion] = useMutation(UPDATE_QUESTION_MUTATION, {\n    onCompleted: res => {\n      setQuestion({ ...question,\n        ...res.updateQuestion\n      });\n      setEdit(false);\n    }\n  });\n\n  const editHandler = values => {\n    updateQuestion({\n      variables: {\n        id: id,\n        title: values.title,\n        message: values.message\n      }\n    });\n  };\n\n  const [deleteQuestion] = useMutation(DELETE_QUESTION_MUTATION, {\n    onCompleted: () => history.push('/')\n  });\n\n  const deleteHandler = () => {\n    deleteQuestion({\n      variables: {\n        id: id\n      }\n    });\n  };\n\n  function showDeleteConfirm() {\n    confirm({\n      title: 'Delete this question?',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this),\n      content: 'Are you sure you want to delete this question?',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n\n      onOk() {\n        deleteHandler();\n      },\n\n      onCancel() {\n        console.log('Cancel');\n      }\n\n    });\n  }\n\n  const answersListHandler = question => {\n    setQuestion(question);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      locationArray: ['Home', 'Question', question ? question.title : '']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: question && /*#__PURE__*/_jsxDEV(Card, {\n        title: question.title,\n        className: \"question-card\",\n        extra: /*#__PURE__*/_jsxDEV(IconBar, {\n          className: \"question-icon-bar\",\n          editHandler: () => setEdit(true),\n          deleteHandler: showDeleteConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 40\n        }, this),\n        children: [edit && /*#__PURE__*/_jsxDEV(EditQuestion, {\n          question: question,\n          editHandler: editHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"Submitted at\",\n              bordered: true,\n              children: question.submissionTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"Author\",\n              bordered: true,\n              children: question.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"View\",\n              bordered: true,\n              children: question.view\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              size: \"small\",\n              title: \"Vote\",\n              bordered: true,\n              extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"http://google.com\",\n                  children: [\"UP\", /*#__PURE__*/_jsxDEV(CaretUpOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"http://google.com\",\n                  children: [\"DOWN\", /*#__PURE__*/_jsxDEV(CaretDownOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 127\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 95\n                }, this)]\n              }, void 0, true),\n              children: question.voteCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"question-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: question.message.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g, '<br>')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Answers, {\n          question: question,\n          answersListHandler: answersListHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"sehehGPvB8CU+w/NwZB9QoOOH44=\", false, function () {\n  return [useParams, useHistory, useQuery, useMutation, useMutation];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/Question.tsx"],"names":["useState","useParams","useHistory","Breadcrumb","Answers","Card","Row","Col","Modal","CaretUpOutlined","CaretDownOutlined","ExclamationCircleOutlined","IconBar","EditQuestion","gql","useQuery","useMutation","confirm","FEED_QUESTION_QUERY","UPDATE_QUESTION_MUTATION","DELETE_QUESTION_MUTATION","Question","id","question","setQuestion","edit","setEdit","history","variables","parseInt","onCompleted","res","feedQuestion","updateQuestion","editHandler","values","title","message","deleteQuestion","push","deleteHandler","showDeleteConfirm","icon","content","okText","okType","cancelText","onOk","onCancel","console","log","answersListHandler","submissionTime","user","name","view","voteCount","__html","replace"],"mappings":"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","sourcesContent":["import { FC, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport Answers from '../Answers/Answers';\nimport { Card, Row, Col, Modal } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { QuestionInterface } from '../../interfaces/QuestionInterface';\nimport IconBar from '../IconBar';\nimport EditQuestion from '../EditQuestion';\nimport { gql, useQuery, useMutation } from '@apollo/client'\n\nconst { confirm } = Modal;\n\nconst FEED_QUESTION_QUERY = gql`\nquery feedQuestionQuery($id: ID!) {\n    feedQuestion(id: $id) {\n        title\n        message\n        submissionTime\n        view\n        voteCount\n        answers {\n            id\n            key\n            author\n            content\n            avatar\n            datetime\n        }\n    }\n}\n`\n\nconst UPDATE_QUESTION_MUTATION = gql`\nmutation updateQuestionMutation(\n    $id: ID!\n    $title: String!\n    $message: String!) {\n    updateQuestion(id: $id, title: $title, message: $message) {\n        title\n        message\n    }\n}\n`\n\nconst DELETE_QUESTION_MUTATION = gql`\nmutation deleteQuestionMutation($id: ID!){\n    deleteQuestion(id: $id) {\n      id\n    }\n  }\n`\n\nconst Question: FC = () => {\n    const {id}: {id: string} = useParams();\n    const [question, setQuestion] = useState<QuestionInterface>();\n    const [edit, setEdit] = useState(false);\n    const history = useHistory();\n\n    useQuery(FEED_QUESTION_QUERY, {\n        variables: { id: parseInt(id) },\n        onCompleted: (res) => setQuestion(res.feedQuestion)\n    })\n\n    const [updateQuestion] = useMutation(UPDATE_QUESTION_MUTATION, {\n        onCompleted: (res) => {\n            setQuestion({...question, ...res.updateQuestion})\n            setEdit(false)\n        }\n    })\n\n    const editHandler = (values: any) => {\n        updateQuestion({ variables: {\n            id: id,\n            title: values.title,\n            message: values.message\n        }})\n    }\n\n    const [deleteQuestion] = useMutation(DELETE_QUESTION_MUTATION, {\n        onCompleted: () => history.push('/')\n    })\n\n    const deleteHandler = () => {\n        deleteQuestion({ variables: { id: id } })\n    }\n\n    function showDeleteConfirm() {\n        confirm({\n          title: 'Delete this question?',\n          icon: <ExclamationCircleOutlined />,\n          content: 'Are you sure you want to delete this question?',\n          okText: 'Yes',\n          okType: 'danger',\n          cancelText: 'No',\n          onOk() {\n            deleteHandler();\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n\n    const answersListHandler = (question: QuestionInterface) => {\n        setQuestion(question)\n    } \n\n    return (\n        <>\n            <Breadcrumb locationArray={['Home', 'Question', question ? question.title : '']} />\n            <div className=\"site-layout-content\">  \n                {question && <Card \n                                title={question.title}\n                                className=\"question-card\"\n                                extra={<IconBar \n                                            className=\"question-icon-bar\"\n                                            editHandler={() => setEdit(true)}\n                                            deleteHandler={showDeleteConfirm} />}>\n                    {edit && <EditQuestion question={question} editHandler={editHandler} />}\n                    <Row gutter={16} className=\"details\">\n                        <Col span={6}>\n                            <Card size=\"small\" title=\"Submitted at\" bordered={true}>\n                            {question.submissionTime}\n                            </Card>\n                        </Col>\n                        <Col span={6}>\n                            <Card size=\"small\" title=\"Author\" bordered={true}>\n                            {question.user.name}\n                            </Card>\n                        </Col>\n                        <Col span={6}>\n                            <Card size=\"small\" title=\"View\" bordered={true}>\n                            {question.view}\n                            </Card>\n                        </Col>\n                        <Col span={6}>\n                            <Card \n                                size=\"small\"\n                                title=\"Vote\"\n                                bordered={true}\n                                extra={<><a href=\"http://google.com\">UP<CaretUpOutlined /></a><a href=\"http://google.com\">DOWN<CaretDownOutlined /></a></>}>\n                            {question.voteCount}\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Card className=\"question-message\">\n                        <div dangerouslySetInnerHTML={{__html: question.message.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g, '<br>')}}></div>\n                    </Card>\n                    <Answers question={question} answersListHandler={answersListHandler} />\n                </Card>}\n            </div>\n        </>\n    )\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}