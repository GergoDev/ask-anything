{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nmodule.exports = function toReactElements(node, components) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'default_key';\n\n  if (typeof node === 'string') {\n    if (components['#text']) {\n      var result = components['#text'](node);\n\n      if (!result || !result.type) {\n        console.error('react-safe-html #text component didn\\'t return a react element');\n        return node;\n      }\n\n      return result;\n    } else {\n      return node;\n    }\n  }\n\n  var children = node.children;\n\n  if (Array.isArray(children)) {\n    children = node.children.map(function (child, i) {\n      var element = toReactElements(child, components, i);\n      return element;\n    });\n  }\n\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n\n  var resNode = null;\n  var type = components[node.type];\n\n  if (type) {\n    var props = Object.assign({}, node.props, {\n      key: key\n    });\n    resNode = React.createElement(type, props, children);\n  } else {\n    resNode = React.createElement('span', {\n      key: key\n    }, children);\n  }\n\n  return resNode;\n};","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/node_modules/react-safe-html/lib/toReactElements.js"],"names":["React","require","module","exports","toReactElements","node","components","key","arguments","length","undefined","result","type","console","error","children","Array","isArray","map","child","i","element","resNode","props","Object","assign","createElement"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,UAA/B,EAA2C;AAC1D,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,aAA9E;;AAEA,MAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIC,UAAU,CAAC,OAAD,CAAd,EAAyB;AACvB,UAAIK,MAAM,GAAGL,UAAU,CAAC,OAAD,CAAV,CAAoBD,IAApB,CAAb;;AACA,UAAI,CAACM,MAAD,IAAW,CAACA,MAAM,CAACC,IAAvB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,KAAR,CAAc,gEAAd;AACA,eAAOT,IAAP;AACD;;AACD,aAAOM,MAAP;AACD,KAPD,MAOO;AACL,aAAON,IAAP;AACD;AACF;;AAED,MAAIU,QAAQ,GAAGV,IAAI,CAACU,QAApB;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAJ,EAA6B;AAC3BA,IAAAA,QAAQ,GAAGV,IAAI,CAACU,QAAL,CAAcG,GAAd,CAAkB,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;AAC/C,UAAIC,OAAO,GAAGjB,eAAe,CAACe,KAAD,EAAQb,UAAR,EAAoBc,CAApB,CAA7B;AACA,aAAOC,OAAP;AACD,KAHU,CAAX;AAID;;AAED,MAAI,CAACL,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAL,EAA8B;AAC5BA,IAAAA,QAAQ,GAAG,CAACA,QAAD,CAAX;AACD;;AAED,MAAIO,OAAO,GAAG,IAAd;AACA,MAAIV,IAAI,GAAGN,UAAU,CAACD,IAAI,CAACO,IAAN,CAArB;;AAEA,MAAIA,IAAJ,EAAU;AACR,QAAIW,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,IAAI,CAACkB,KAAvB,EAA8B;AAAEhB,MAAAA,GAAG,EAAEA;AAAP,KAA9B,CAAZ;AACAe,IAAAA,OAAO,GAAGtB,KAAK,CAAC0B,aAAN,CAAoBd,IAApB,EAA0BW,KAA1B,EAAiCR,QAAjC,CAAV;AACD,GAHD,MAGO;AACLO,IAAAA,OAAO,GAAGtB,KAAK,CAAC0B,aAAN,CAAoB,MAApB,EAA4B;AAAEnB,MAAAA,GAAG,EAAEA;AAAP,KAA5B,EAA0CQ,QAA1C,CAAV;AACD;;AACD,SAAOO,OAAP;AACD,CAvCD","sourcesContent":["'use strict';\n\nvar React = require('react');\n\nmodule.exports = function toReactElements(node, components) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'default_key';\n\n  if (typeof node === 'string') {\n    if (components['#text']) {\n      var result = components['#text'](node);\n      if (!result || !result.type) {\n        console.error('react-safe-html #text component didn\\'t return a react element');\n        return node;\n      }\n      return result;\n    } else {\n      return node;\n    }\n  }\n\n  var children = node.children;\n\n  if (Array.isArray(children)) {\n    children = node.children.map(function (child, i) {\n      var element = toReactElements(child, components, i);\n      return element;\n    });\n  }\n\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n\n  var resNode = null;\n  var type = components[node.type];\n\n  if (type) {\n    var props = Object.assign({}, node.props, { key: key });\n    resNode = React.createElement(type, props, children);\n  } else {\n    resNode = React.createElement('span', { key: key }, children);\n  }\n  return resNode;\n};"]},"metadata":{},"sourceType":"script"}