{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/Answers/Answers.tsx\";\nimport { Comment, Avatar } from 'antd';\nimport React from 'react';\nimport AnswerList from './AnswerList';\nimport Editor from './Editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Answers extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answers: [],\n      submitting: false,\n      value: ''\n    };\n\n    this.addAnswer = async answer => {\n      const res = await fetch('http://localhost:5000/answers', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(answer)\n      });\n      const newAnswer = await res.json();\n      this.setState({\n        submitting: false,\n        value: '',\n        answers: [...this.state.answers, newAnswer]\n      });\n    };\n\n    this.deleteAnswer = async answerId => {\n      await fetch(`http://localhost:5000/answers/${answerId}`, {\n        method: 'DELETE'\n      });\n      this.setState({\n        submitting: false,\n        value: '',\n        answers: [...this.state.answers.filter(answer => answer.id !== answerId)]\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (!this.state.value) {\n        return;\n      } // this.setState({\n      //   submitting: true,\n      // });\n      // setTimeout(() => {\n      //   this.addAnswer({\n      //     author: 'Pisti',\n      //     user_id: 1,\n      //     question_id: parseInt(this.props.question_id),\n      //     avatar: 'https://i.pravatar.cc/400?img=33',\n      //     content: this.state.value,\n      //     datetime: Date(),\n      //   })\n      // }, 1000);\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.state,\n      answers: [...this.props.answers]\n    });\n    console.log(\"answers\", { ...this.state.answers\n    });\n  }\n\n  render() {\n    const {\n      answers,\n      submitting,\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), answers.length > 0 && /*#__PURE__*/_jsxDEV(AnswerList, {\n        answers: answers,\n        deleteHandler: this.deleteAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://i.pravatar.cc/400?img=33\",\n          alt: \"Han Solo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Editor, {\n          onChange: this.handleChange,\n          onSubmit: this.handleSubmit,\n          submitting: submitting,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Answers;","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/Answers/Answers.tsx"],"names":["Comment","Avatar","React","AnswerList","Editor","Answers","Component","state","answers","submitting","value","addAnswer","answer","res","fetch","method","headers","body","JSON","stringify","newAnswer","json","setState","deleteAnswer","answerId","filter","id","handleSubmit","handleChange","e","target","componentDidMount","props","console","log","render","length"],"mappings":"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","sourcesContent":["import { Comment, Avatar } from 'antd';\nimport React from 'react';\nimport AnswerList from './AnswerList';\nimport Editor from './Editor';\nimport { AnswerInterface } from '../../interfaces/AnswerInterface';\nimport { NewAnswerInterface } from '../../interfaces/NewAnswerInterface';\n\nclass Answers extends React.Component<{answers: AnswerInterface[], answersRefetch: Function}> {\n  state = {\n    answers: [],\n    submitting: false,\n    value: '',\n  };\n\n  addAnswer = async (answer: NewAnswerInterface) => {\n    const res = await fetch('http://localhost:5000/answers',\n      {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(answer)\n      })\n    const newAnswer = await res.json();\n    this.setState({\n      submitting: false,\n      value: '',\n      answers: [...this.state.answers, newAnswer],\n    });\n  }\n\n  deleteAnswer = async (answerId: number) => {\n    await fetch(`http://localhost:5000/answers/${answerId}`, {method: 'DELETE'});\n    this.setState({\n      submitting: false,\n      value: '',\n      answers: [...this.state.answers.filter((answer: AnswerInterface) => answer.id !== answerId)],\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      answers: [ ...this.props.answers ]\n    })\n    console.log(\"answers\", { ...this.state.answers })\n  }\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      return;\n    }\n\n    // this.setState({\n    //   submitting: true,\n    // });\n\n    // setTimeout(() => {\n    //   this.addAnswer({\n    //     author: 'Pisti',\n    //     user_id: 1,\n    //     question_id: parseInt(this.props.question_id),\n    //     avatar: 'https://i.pravatar.cc/400?img=33',\n    //     content: this.state.value,\n    //     datetime: Date(),\n    //   })\n    // }, 1000);\n  };\n\n  handleChange = (e: { target: { value: string; }; }) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { answers, submitting, value } = this.state;\n\n    return (\n      <div className=\"comment-section\">\n        <h2>Answers</h2>\n        {answers.length > 0 && <AnswerList \n          answers={answers}\n          deleteHandler={this.deleteAnswer} />}\n        <Comment\n          avatar={\n            <Avatar\n              src=\"https://i.pravatar.cc/400?img=33\"\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Editor\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              submitting={submitting}\n              value={value}\n            />\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Answers;"]},"metadata":{},"sourceType":"module"}