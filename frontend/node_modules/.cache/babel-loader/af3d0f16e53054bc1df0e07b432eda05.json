{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/src/components/Breadcrumb.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport StyledBreadcrumb from './styles/Breadcrumb.styled';\nimport { Breadcrumb as origBreadcrumb } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumb = ({\n  setBread\n}) => {\n  _s();\n\n  const [currentLocation, setCurrentLocation] = useState([]);\n  setBread = setCurrentLocation;\n  return /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n    children: currentLocation && currentLocation.map((part, index) => /*#__PURE__*/_jsxDEV(origBreadcrumb.Item, {\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Breadcrumb, \"FhlUjvYHGtc4oF6UgCJFNvUvcx0=\");\n\n_c = Breadcrumb;\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/src/components/Breadcrumb.tsx"],"names":["useState","StyledBreadcrumb","Breadcrumb","origBreadcrumb","setBread","currentLocation","setCurrentLocation","map","part","index"],"mappings":";;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,UAAU,IAAIC,cAAvB,QAA6C,MAA7C;;;AAEA,MAAMD,UAAgD,GAAG,CAAC;AAACE,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACrE,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AAEAI,EAAAA,QAAQ,GAAGE,kBAAX;AAEA,sBAAQ,QAAC,gBAAD;AAAA,cACKD,eAAe,IAAIA,eAAe,CAACE,GAAhB,CAAoB,CAACC,IAAD,EAAeC,KAAf,kBACpC,QAAC,cAAD,CAAgB,IAAhB;AAAA,gBAAkCD;AAAlC,OAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,YADgB;AADxB;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH,CAVD;;GAAMP,U;;KAAAA,U;AAYN,eAAeA,UAAf","sourcesContent":["import { FC, useState } from 'react';\nimport StyledBreadcrumb from './styles/Breadcrumb.styled';\nimport { Breadcrumb as origBreadcrumb } from 'antd';\n\nconst Breadcrumb: FC<{setBread: Function | undefined}> = ({setBread}) => {\n    const [currentLocation, setCurrentLocation] = useState([]);\n\n    setBread = setCurrentLocation;\n    \n    return (<StyledBreadcrumb>\n                {currentLocation && currentLocation.map((part: string, index: number) => (\n                    <origBreadcrumb.Item key={index}>{part}</origBreadcrumb.Item>\n                ))}\n            </StyledBreadcrumb>)\n}\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}