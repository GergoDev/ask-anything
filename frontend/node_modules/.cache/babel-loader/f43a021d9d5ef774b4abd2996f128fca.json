{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/src/components/Answers/AnswerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Comment, List } from 'antd';\nimport IconBar from '../IconBar';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerList = ({\n  answers\n}) => {\n  _s();\n\n  const [currentAnswers, setAnswers] = useState([...answers]);\n\n  const deleteHandler = async answerId => {\n    await fetch(`http://localhost:5000/answers/${answerId}`, {\n      method: 'DELETE'\n    });\n    setAnswers(currentAnswers.filter(answer => answer.id !== answerId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    dataSource: currentAnswers,\n    header: `${answers.length} ${answers.length > 1 ? 'replies' : 'reply'}`,\n    itemLayout: \"horizontal\",\n    renderItem: props => {\n      const alteredProps = { ...props,\n        datetime: moment(props.datetime).fromNow()\n      };\n      return /*#__PURE__*/_jsxDEV(Comment, { ...alteredProps,\n        actions: [/*#__PURE__*/_jsxDEV(IconBar, {\n          className: \"comment-icon-bar\",\n          editHandler: () => console.log(props),\n          deleteHandler: () => deleteHandler(props.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 52\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AnswerList, \"LCD/mYa0nC/36AYV4Rq19rdO9Xs=\");\n\n_c = AnswerList;\nexport default AnswerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerList\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/src/components/Answers/AnswerList.tsx"],"names":["Comment","List","IconBar","moment","useState","AnswerList","answers","currentAnswers","setAnswers","deleteHandler","answerId","fetch","method","filter","answer","id","length","props","alteredProps","datetime","fromNow","console","log"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,IAAlB,QAA8B,MAA9B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+C;AAAA;;AAChE,QAAM,CAACC,cAAD,EAAiBC,UAAjB,IAA+BJ,QAAQ,CAAC,CAAC,GAAGE,OAAJ,CAAD,CAA7C;;AAEA,QAAMG,aAAa,GAAG,MAAOC,QAAP,IAA4B;AAChD,UAAMC,KAAK,CAAE,iCAAgCD,QAAS,EAA3C,EAA8C;AAACE,MAAAA,MAAM,EAAE;AAAT,KAA9C,CAAX;AACAJ,IAAAA,UAAU,CAACD,cAAc,CAACM,MAAf,CAAuBC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcL,QAAhD,CAAD,CAAV;AACD,GAHD;;AAKA,sBAAQ,QAAC,IAAD;AACN,IAAA,UAAU,EAAEH,cADN;AAEN,IAAA,MAAM,EAAG,GAAED,OAAO,CAACU,MAAO,IAAGV,OAAO,CAACU,MAAR,GAAiB,CAAjB,GAAqB,SAArB,GAAiC,OAAQ,EAFhE;AAGN,IAAA,UAAU,EAAC,YAHL;AAIN,IAAA,UAAU,EAAEC,KAAK,IAAI;AACnB,YAAMC,YAAY,GAAG,EAAC,GAAGD,KAAJ;AAAWE,QAAAA,QAAQ,EAAEhB,MAAM,CAACc,KAAK,CAACE,QAAP,CAAN,CAAuBC,OAAvB;AAArB,OAArB;AACA,0BAAQ,QAAC,OAAD,OAAaF,YAAb;AAA2B,QAAA,OAAO,EAAE,cAAC,QAAC,OAAD;AAC7C,UAAA,SAAS,EAAC,kBADmC;AAE7C,UAAA,WAAW,EAAE,MAAMG,OAAO,CAACC,GAAR,CAAYL,KAAZ,CAF0B;AAG7C,UAAA,aAAa,EAAE,MAAMR,aAAa,CAACQ,KAAK,CAACF,EAAP;AAHW;AAAA;AAAA;AAAA;AAAA,gBAAD;AAApC;AAAA;AAAA;AAAA;AAAA,cAAR;AAGuD;AATnD;AAAA;AAAA;AAAA;AAAA,UAAR;AAWC,CAnBH;;GAAMV,U;;KAAAA,U;AAqBN,eAAeA,UAAf","sourcesContent":["import { Comment, List } from 'antd';\nimport IconBar from '../IconBar';\nimport { AnswerInterface } from '../../interfaces/Answer';\nimport moment from 'moment';\nimport { useState } from 'react';\n\nconst AnswerList = ({ answers }: {answers: AnswerInterface[]}) => {\n  const [currentAnswers, setAnswers] = useState([...answers]);\n\n  const deleteHandler = async (answerId: number) => {\n    await fetch(`http://localhost:5000/answers/${answerId}`, {method: 'DELETE'});\n    setAnswers(currentAnswers.filter((answer) => answer.id !== answerId));\n  }\n\n  return (<List\n    dataSource={currentAnswers}\n    header={`${answers.length} ${answers.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => {\n      const alteredProps = {...props, datetime: moment(props.datetime).fromNow()};\n      return (<Comment {...alteredProps} actions={[<IconBar \n      className=\"comment-icon-bar\"\n      editHandler={() => console.log(props)}\n      deleteHandler={() => deleteHandler(props.id)} />]} />)}}\n  />)\n  };\n\nexport default AnswerList;"]},"metadata":{},"sourceType":"module"}