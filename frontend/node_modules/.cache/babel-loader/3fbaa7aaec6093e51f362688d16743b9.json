{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/src/components/routes/Registration.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Breadcrumb from '../Breadcrumb';\nimport Result from '../Result';\nimport { Form, Input, InputNumber, Button, Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!'\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}'\n  }\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst Registration = () => {\n  _s();\n\n  const [validData, setValidData] = useState();\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log(values);\n    setValidData(values);\n    form.resetFields();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      locationArray: ['Home', 'New User Registration']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"registration-form-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), !validData ? /*#__PURE__*/_jsxDEV(Form, { ...layout,\n          name: \"nest-messages\",\n          form: form,\n          onFinish: onFinish,\n          validateMessages: validateMessages,\n          labelCol: { ...layout.labelCol\n          },\n          wrapperCol: { ...layout.wrapperCol\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'name'],\n            label: \"Name\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Choose a Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'email'],\n            label: \"Email\",\n            rules: [{\n              type: 'email',\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Your Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'password'],\n            label: \"Password\",\n            rules: [{\n              required: true\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'password2'],\n            label: \"Confirm Password\",\n            dependencies: ['password'],\n            hasFeedback: true,\n            rules: [{\n              required: true,\n              message: 'Please confirm your password!'\n            }, ({\n              getFieldValue\n            }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(['user', 'password']) === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(new Error('The two passwords that you entered do not match!'));\n              }\n\n            })],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              type: \"password\",\n              placeholder: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'age'],\n            label: \"Age\",\n            rules: [{\n              type: 'number',\n              min: 0,\n              max: 99\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              placeholder: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'github'],\n            label: \"Github\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Your GitHub Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['user', 'introduction'],\n            label: \"Introduction\",\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n              placeholder: \"Introduce Yourself\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: { ...layout.wrapperCol,\n              offset: layout.labelCol.span\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Registration, \"VoFZcqhVYfelNoouXDutbCuKIlU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/src/components/routes/Registration.tsx"],"names":["useState","Breadcrumb","Result","Form","Input","InputNumber","Button","Card","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Registration","validData","setValidData","form","useForm","onFinish","values","console","log","resetFields","type","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error","min","max","offset"],"mappings":"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","sourcesContent":["import { FC, useState } from 'react';\nimport Breadcrumb from '../Breadcrumb';\nimport Result from '../Result';\nimport { Form, Input, InputNumber, Button, Card } from 'antd';\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 24 },\n};\n\n/* eslint-disable no-template-curly-in-string */\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst Registration: FC = () => {\n    const [validData, setValidData] = useState();\n    const [form] = Form.useForm();\n\n    const onFinish = (values: any) => {\n        console.log(values);\n        setValidData(values);\n        form.resetFields();\n    };\n\n    return (\n        <>\n            <Breadcrumb locationArray={['Home', 'New User Registration']} />\n            <div className=\"site-layout-content\">\n            <Card className=\"registration-form-card\">\n                <h1>Registration</h1>\n                {!validData ? <Form \n                                {...layout}\n                                name=\"nest-messages\"\n                                form={form}\n                                onFinish={onFinish}\n                                validateMessages={validateMessages}\n                                labelCol={{ ...layout.labelCol }}\n                                wrapperCol={{ ...layout.wrapperCol }}>\n                        <Form.Item name={['user', 'name']} label=\"Name\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Choose a Username\" />\n                        </Form.Item>\n                        <Form.Item name={['user', 'email']} label=\"Email\" rules={[{ type: 'email' , required: true}]}>\n                            <Input placeholder=\"Your Email Address\" />\n                        </Form.Item>\n                        <Form.Item name={['user', 'password']} label=\"Password\" rules={[{ required: true}]} hasFeedback>\n                            <Input.Password type=\"password\" placeholder=\"Password\" />\n                        </Form.Item>\n                        <Form.Item\n                            name={['user', 'password2']}\n                            label=\"Confirm Password\"\n                            dependencies={['password']}\n                            hasFeedback\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                if (!value || getFieldValue(['user', 'password']) === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                            ]}\n                        >\n                            <Input.Password type=\"password\" placeholder=\"Confirm Password\" />\n                        </Form.Item>\n                        <Form.Item name={['user', 'age']} label=\"Age\" rules={[{ type: 'number', min: 0, max: 99 }]}>\n                            <InputNumber placeholder=\"Age\" />\n                        </Form.Item>\n                        <Form.Item name={['user', 'github']} label=\"Github\">\n                            <Input placeholder=\"Your GitHub Username\" />\n                        </Form.Item>\n                        <Form.Item name={['user', 'introduction']} label=\"Introduction\">\n                            <Input.TextArea placeholder=\"Introduce Yourself\" />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: layout.labelCol.span }}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                            </Button>\n                        </Form.Item>\n                    </Form> :\n                <Result />}\n            </Card>\n            </div>\n        </>\n    );\n};\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}