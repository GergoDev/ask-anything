{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/src/components/routes/NewQuestion.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Form, Input } from 'antd';\nimport { useState } from 'react';\nimport Breadcrumb from '../Breadcrumb';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewQuestion = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const onFinish = async () => {\n    console.log('Success:', title, message);\n    await fetch('http://localhost:5000/questions', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"key\": 1,\n        \"user_id\": 1,\n        \"user_name\": \"Zoli\",\n        \"by\": \"gergo@gmail.com\",\n        \"title\": title,\n        message,\n        \"submission_time\": Date(),\n        \"view\": 0,\n        \"vote\": 0\n      })\n    });\n    setRedirect(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      locationArray: ['Home', 'Create a New Question']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"new-question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          name: \"new-question\",\n          onFinish: onFinish,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"title\",\n            rules: [{\n              required: true,\n              message: 'Please input the title of your question!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Title\",\n              onChange: e => setTitle(e.target.value),\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"message\",\n            rules: [{\n              required: true,\n              message: 'Please input your question description!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n              placeholder: \"Description\",\n              rows: 10,\n              onChange: e => setMessage(e.target.value),\n              value: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              size: \"large\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewQuestion, \"V1L+2T0xOpuSRLPRykKQhweEd6w=\");\n\n_c = NewQuestion;\nexport default NewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/src/components/routes/NewQuestion.tsx"],"names":["Button","Card","Form","Input","useState","Breadcrumb","Redirect","NewQuestion","title","setTitle","message","setMessage","redirect","setRedirect","onFinish","console","log","fetch","method","headers","body","JSON","stringify","Date","required","e","target","value"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,MAA1C;AACA,SAAaC,QAAb,QAA6B,OAA7B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;;AAEA,MAAMC,WAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMU,QAAQ,GAAG,YAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,KAAxB,EAA+BE,OAA/B;AACA,UAAMO,KAAK,CAAC,iCAAD,EACP;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFb;AAKIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,eAAO,CADU;AAEjB,mBAAW,CAFM;AAGjB,qBAAa,MAHI;AAIjB,cAAM,iBAJW;AAKjB,iBAASd,KALQ;AAMjBE,QAAAA,OANiB;AAOjB,2BAAmBa,IAAI,EAPN;AAQjB,gBAAQ,CARS;AASjB,gBAAQ;AATS,OAAf;AALV,KADO,CAAX;AAmBAV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAtBD;;AAwBA,sBAAQ;AAAA,eACHD,QAAQ,iBAAI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADT,eAEJ,QAAC,UAAD;AAAY,MAAA,aAAa,EAAE,CAAC,MAAD,EAAS,uBAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFI,eAGJ;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AACI,UAAA,IAAI,EAAC,cADT;AAEI,UAAA,QAAQ,EAAEE,QAFd;AAGI,UAAA,YAAY,EAAC,KAHjB;AAAA,kCAKI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAE,CAAC;AAAEU,cAAAA,QAAQ,EAAE,IAAZ;AAAkBd,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAFX;AAAA,mCAII,QAAC,KAAD;AACI,cAAA,WAAW,EAAC,OADhB;AAEI,cAAA,QAAQ,EAAGe,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGI,cAAA,KAAK,EAAEnB;AAHX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAeI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,SADT;AAEI,YAAA,KAAK,EAAE,CAAC;AAAEgB,cAAAA,QAAQ,EAAE,IAAZ;AAAkBd,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAFX;AAAA,mCAII,QAAC,KAAD,CAAO,QAAP;AACI,cAAA,WAAW,EAAC,aADhB;AAEI,cAAA,IAAI,EAAE,EAFV;AAEc,cAAA,QAAQ,EAAGe,CAAD,IAAOd,UAAU,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAFzC;AAGI,cAAA,KAAK,EAAEjB;AAHX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAyBI,QAAC,IAAD,CAAM,IAAN;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAyC,cAAA,IAAI,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA,kBAAR;AAwCC,CArEL;;GAAMH,W;;KAAAA,W;AAuEN,eAAeA,WAAf","sourcesContent":["import { Button, Card, Form, Input } from 'antd';\nimport { FC, useState } from 'react';\nimport Breadcrumb from '../Breadcrumb';\nimport { Redirect } from 'react-router-dom';\n\nconst NewQuestion: FC = () => {\n    const [title, setTitle] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [redirect, setRedirect] = useState(false);\n\n    const onFinish = async () => {\n        console.log('Success:', title, message);\n        await fetch('http://localhost:5000/questions',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"key\": 1,\n                    \"user_id\": 1,\n                    \"user_name\": \"Zoli\",\n                    \"by\": \"gergo@gmail.com\",\n                    \"title\": title,\n                    message,\n                    \"submission_time\": Date(),\n                    \"view\": 0,\n                    \"vote\": 0\n                })\n            }\n        )\n        setRedirect(true);\n    };\n\n    return (<>\n        {redirect && <Redirect to=\"/\" />}\n        <Breadcrumb locationArray={['Home', 'Create a New Question']} />\n        <div className=\"site-layout-content\">\n            <Card className=\"new-question-card\">\n                <h1>New Question</h1>\n                <Form\n                    name=\"new-question\"\n                    onFinish={onFinish}\n                    autoComplete=\"off\"\n                    >\n                    <Form.Item\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Please input the title of your question!' }]}\n                    >\n                        <Input \n                            placeholder=\"Title\"\n                            onChange={(e) => setTitle(e.target.value)}\n                            value={title} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"message\"\n                        rules={[{ required: true, message: 'Please input your question description!' }]}\n                    >\n                        <Input.TextArea\n                            placeholder=\"Description\"\n                            rows={10} onChange={(e) => setMessage(e.target.value)}\n                            value={message} />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                            Send\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    </>);\n    }\n\nexport default NewQuestion;"]},"metadata":{},"sourceType":"module"}