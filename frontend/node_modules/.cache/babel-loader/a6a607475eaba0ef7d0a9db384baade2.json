{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/Answers/Answers.tsx\",\n    _s = $RefreshSig$();\n\nimport { Comment, Avatar } from 'antd';\nimport { useState, useEffect } from 'react';\nimport AnswerList from './AnswerList';\nimport Editor from './Editor';\nimport { gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst POST_ANSWER_MUTATION = gql`\nmutation postAnswerMutation(\n  $questionId: ID!\n  $content: String!\n  $avatar: String!\n){\n  postAnswer(\n    questionId: $questionId,\n    content: $content,\n    avatar: $avatar) {\n      id\n      key\n      author\n      content\n      avatar\n      datetime\n    }\n}\n`;\nconst DELETE_ANSWER_MUTATION = gql`\nmutation deleteAnswerMutation($id: ID!){\n  deleteAnswer(id: $id) {\n    id\n  }\n}\n`;\n\nconst Answers = ({\n  questionId,\n  answersProp\n}) => {\n  _s();\n\n  const [answers, setAnswers] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    setAnswers([...answersProp]);\n  }, [answersProp]);\n  const [deleteAnswerMutation] = useMutation(DELETE_ANSWER_MUTATION, {\n    onCompleted: res => setAnswers(answers.filter(answer => answer.id !== res.deleteAnswer.id))\n  });\n\n  const deleteAnswerHandler = answerId => {\n    deleteAnswerMutation({\n      variables: {\n        id: answerId\n      }\n    });\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const [postAnswerMutation] = useMutation(POST_ANSWER_MUTATION, {\n    variables: {\n      questionId,\n      content: value,\n      avatar: \"https://i.pravatar.cc/400?img=12\"\n    },\n    onCompleted: res => {\n      setAnswers([...answers, res.postAnswer]);\n      setValue(\"\");\n      setSubmitting(false);\n    }\n  });\n\n  const handleSubmit = () => {\n    if (!value) return;\n    setSubmitting(true);\n    setTimeout(() => {\n      postAnswerMutation();\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), answers.length > 0 && /*#__PURE__*/_jsxDEV(AnswerList, {\n      answers: answers,\n      deleteHandler: deleteAnswerHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: \"https://i.pravatar.cc/400?img=33\",\n        alt: \"Han Solo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this),\n      content: /*#__PURE__*/_jsxDEV(Editor, {\n        onChange: handleChange,\n        onSubmit: handleSubmit,\n        submitting: submitting,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Answers, \"ifWGX6FvdtwLB/U7D2OWFz8YcrE=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = Answers;\nexport default Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/Answers/Answers.tsx"],"names":["Comment","Avatar","useState","useEffect","AnswerList","Editor","gql","useMutation","POST_ANSWER_MUTATION","DELETE_ANSWER_MUTATION","Answers","questionId","answersProp","answers","setAnswers","submitting","setSubmitting","value","setValue","deleteAnswerMutation","onCompleted","res","filter","answer","id","deleteAnswer","deleteAnswerHandler","answerId","variables","handleChange","e","target","postAnswerMutation","content","avatar","postAnswer","handleSubmit","setTimeout","length"],"mappings":"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","sourcesContent":["import { Comment, Avatar } from 'antd';\nimport { useState, useEffect } from 'react';\nimport AnswerList from './AnswerList';\nimport Editor from './Editor';\nimport { AnswerInterface } from '../../interfaces/AnswerInterface';\nimport { gql, useMutation } from '@apollo/client'\n\nconst POST_ANSWER_MUTATION = gql`\nmutation postAnswerMutation(\n  $questionId: ID!\n  $content: String!\n  $avatar: String!\n){\n  postAnswer(\n    questionId: $questionId,\n    content: $content,\n    avatar: $avatar) {\n      id\n      key\n      author\n      content\n      avatar\n      datetime\n    }\n}\n`\n\nconst DELETE_ANSWER_MUTATION = gql`\nmutation deleteAnswerMutation($id: ID!){\n  deleteAnswer(id: $id) {\n    id\n  }\n}\n`\n\ntype propTypes = {\n  questionId: string,\n  answersProp: AnswerInterface[],\n}\n\nconst Answers = ({questionId, answersProp}: propTypes) => {\n  const [answers, setAnswers] = useState<AnswerInterface[]>([])\n  const [submitting, setSubmitting] = useState(false)\n  const [value, setValue] = useState(\"\")\n\n  useEffect(() => {\n    setAnswers([...answersProp])\n  }, [answersProp])\n\n  const [deleteAnswerMutation] = useMutation(DELETE_ANSWER_MUTATION, {\n    onCompleted: (res) => setAnswers(answers.filter((answer) => answer.id !== res.deleteAnswer.id))\n  })\n\n  const deleteAnswerHandler = (answerId: number) => {\n    deleteAnswerMutation({ variables: { id: answerId } })\n  }\n\n  const handleChange = (e: { target: { value: string; }; }) => {\n    setValue(e.target.value)\n  }\n\n  const [postAnswerMutation] = useMutation(POST_ANSWER_MUTATION, {\n    variables: {\n      questionId,\n      content: value,\n      avatar: \"https://i.pravatar.cc/400?img=12\",\n    },\n    onCompleted: (res) => {\n      setAnswers([...answers, res.postAnswer])\n      setValue(\"\")\n      setSubmitting(false)\n    }\n  })\n\n  const handleSubmit = () => {\n    if(!value)\n      return\n    \n    setSubmitting(true)\n\n    setTimeout(() => {\n      postAnswerMutation()\n    }, 1000)\n  }\n\n  return (\n    <div className=\"comment-section\">\n      <h2>Answers</h2>\n      {answers.length > 0 && <AnswerList \n        answers={answers}\n        deleteHandler={deleteAnswerHandler} />}\n      <Comment\n        avatar={\n          <Avatar\n            src=\"https://i.pravatar.cc/400?img=33\"\n            alt=\"Han Solo\"\n          />\n        }\n        content={\n          <Editor\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n            submitting={submitting}\n            value={value}\n          />\n        }\n      />\n    </div>\n  );\n}\n\nexport default Answers;"]},"metadata":{},"sourceType":"module"}