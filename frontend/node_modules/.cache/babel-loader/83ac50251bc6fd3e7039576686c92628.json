{"ast":null,"code":"var _jsxFileName = \"/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport { Card, Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useMutation, gql } from '@apollo/client';\nimport LoginContext from '../../loginContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation(\n    $email: String!\n    $password: String!\n  ) {\n    login(email: $email, password: $password) {\n      token,\n      user {\n        name\n      }\n    }\n  }\n`;\n\nconst Login = () => {\n  _s();\n\n  const [details, setDetails] = useState({});\n  const history = useHistory();\n  const context = useContext(LoginContext);\n  const [login] = useMutation(LOGIN_MUTATION, {\n    variables: {\n      email: details.email,\n      password: details.password\n    },\n    onCompleted: ({\n      login\n    }) => {\n      context.setLoggedInUser(login.user);\n      localStorage.setItem(\"AUTH_TOKEN\", login.token);\n      history.push('/');\n    },\n    onError: err => console.log(err)\n  });\n\n  const onFinish = values => {\n    setDetails({\n      email: values.email,\n      password: values.password\n    });\n    login();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      locationArray: ['Home', 'Login with your credentials']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"login-form-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            rules: [{\n              type: 'email',\n              required: true,\n              message: 'Please input your email!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 40\n              }, this),\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 40\n              }, this),\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              size: \"large\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"vlR+qWOtIY/64uhgtGhnOYVKzgY=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/gergoferenczi/Documents/Kinsta/project/frontend/src/components/routes/Login.tsx"],"names":["useState","useContext","useHistory","Breadcrumb","Card","Form","Input","Button","UserOutlined","LockOutlined","useMutation","gql","LoginContext","LOGIN_MUTATION","Login","details","setDetails","history","context","login","variables","email","password","onCompleted","setLoggedInUser","user","localStorage","setItem","token","push","onError","err","console","log","onFinish","values","remember","type","required","message"],"mappings":"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","sourcesContent":["import { FC, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Breadcrumb from '../Breadcrumb';\nimport { Card, Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useMutation, gql } from '@apollo/client';\nimport LoginContext from '../../loginContext';\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation(\n    $email: String!\n    $password: String!\n  ) {\n    login(email: $email, password: $password) {\n      token,\n      user {\n        name\n      }\n    }\n  }\n`;\n\nconst Login: FC = () => {\n    const [details, setDetails] = useState<{email?: string, password?: string}>({})\n    const history = useHistory();\n    const context = useContext(LoginContext)\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        variables: {\n            email: details.email,\n            password: details.password\n        },\n        onCompleted: ({ login }) => {\n            context.setLoggedInUser(login.user)\n            localStorage.setItem(\"AUTH_TOKEN\", login.token);\n            history.push('/');\n        },\n        onError: (err) => console.log(err)\n    });\n\n    const onFinish = (values: any) => {\n        setDetails({\n            email: values.email,\n            password: values.password\n        })\n        login()\n    };\n\n    return (<>\n        <Breadcrumb locationArray={['Home', 'Login with your credentials']} />\n        <div className=\"site-layout-content\">\n            <Card className=\"login-form-card\">\n                <h1>Login</h1>\n                <Form\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    autoComplete=\"off\"\n                    >\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{ type: 'email', required: true, message: 'Please input your email!' }]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your password!' }]}\n                    >\n                        <Input prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"Password\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                        Login\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    </>);\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}